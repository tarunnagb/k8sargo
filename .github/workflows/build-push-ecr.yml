name: Build and Push to ECR

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set Git SHA tag
      run: echo "GIT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set ECR repository based on branch
      id: set-vars
      run: |
        if [[ "${{ github.ref_name }}" == "main" ]]; then
          echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY_PROD }}" >> $GITHUB_ENV
        elif [[ "${{ github.ref_name }}" == "develop" ]]; then
          echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY_DEV }}" >> $GITHUB_ENV
        else
          echo "Unsupported branch: ${{ github.ref_name }}. Skipping push."
          exit 1
        fi

    - name: Build, tag, and push Docker image
      env:
        ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        GIT_SHA: ${{ env.GIT_SHA }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
      run: |
        IMAGE_NAME=$ECR_REGISTRY/$ECR_REPOSITORY

        echo "Building Docker image from ./docker-db..."
        docker build -t $IMAGE_NAME:$GIT_SHA ./docker-db

        echo "Tagging with 'latest'..."
        docker tag $IMAGE_NAME:$GIT_SHA $IMAGE_NAME:$GIT_SHA

        echo "Pushing tags $GIT_SHA and latest to $IMAGE_NAME"
        docker push $IMAGE_NAME:$GIT_SHA
